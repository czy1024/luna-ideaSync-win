<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="439" />
    <option name="newTranslationDialogWidth" value="1272" />
    <option name="newTranslationDialogX" value="168" />
    <option name="newTranslationDialogY" value="25" />
    <histories>
      <item value="This method must be called after the module system initialization. The security manager and system class loader may be custom class from the application classpath or modulepath." />
      <item value="Returns an array containing Method objects reflecting all the declared methods of the class or interface represented by this Class object, including public, protected, default (package) access, and private methods, but excluding inherited methods." />
      <item value="Returns a Method object that reflects the specified declared method of the class or interface represented by this Class object. The name parameter is a String that specifies the simple name of the desired method, and the parameterTypes parameter is an array of Class objects that identify the method's formal parameter types, in declared order. If more than one method with the same parameter types is declared in a class, and one of these methods has a return type that is more specific than any of the others, that method is returned; otherwise one of the methods is chosen arbitrarily. If the name is &quot;&lt;init&gt;&quot;or &quot;&lt;clinit&gt;&quot; a NoSuchMethodException is raised." />
      <item value="The parent class loader for delegation Note: VM hardcoded the offset of this field, thus all new fields must be added after it." />
      <item value="The class of the given name is not found in the parent class loader as well as its local URLClassPath. Check if this class has already been defined dynamically; if so, return the loaded class; otherwise, skip the parent delegation and findClass." />
      <item value="If true then resolve the class" />
      <item value="To compare elapsed time against a timeout, use" />
      <item value="Returns the current value of the running Java Virtual Machine's high-resolution time source, in nanoseconds. This method can only be used to measure elapsed time and is not related to any other notion of system or wall-clock time. The value returned represents nanoseconds since some fixed but arbitrary origin time (perhaps in the future, so values may be negative). The same origin is used by all invocations of this method in an instance of a Java virtual machine; other virtual machine instances are likely to use a different origin." />
      <item value="If a security manager is present, and the caller's class loader is not {@code null}, and the caller's class loader is not the same as or an ancestor of the platform class loader, and the caller does not have the" />
      <item value="The name of the builtin platform class loader is" />
      <item value="Return the default ClassLoader to use: typically the thread context ClassLoader, if available; the ClassLoader that loaded the ClassUtils class will be used as fallback. &lt;p&gt;Call this method if you intend to use the thread context ClassLoader in a scenario where you clearly prefer a non-null ClassLoader reference: for example, for class path resource loading (but not necessarily for {@code Class.forName}, which accepts a {@code null} ClassLoader" />
      <item value="Return the default ClassLoader to use: typically the thread context ClassLoader, if available; the ClassLoader that loaded the ClassUtils class will be used as fallback. &lt;p&gt;Call this method if you intend to use the thread context ClassLoader in a scenario where you clearly prefer a non-null ClassLoader reference: for example, for class path resource loading (but not necessarily for" />
      <item value="Cannot access system ClassLoader - oh well, maybe the caller can live with null..." />
      <item value="Cannot access thread context ClassLoader - falling back..." />
      <item value="Tell the subclass to refresh the internal bean factory." />
      <item value="Prepare this context for refreshing." />
      <item value="instead" />
      <item value="occurred evaluating" />
      <item value="true if the permit was acquired, false otherwise" />
      <item value="Return whether this helper will validate all addresses passed to it." />
      <item value="It is important to note that the number of permits requested never affect the throttling of the request itself (an invocation to acquire(1) and an invocation to acquire(1000) will result in exactly the same throttling, if any), but it affects the throttling of the next request. I.e., if an expensive task arrives at an idle RateLimiter, it will be granted immediately, but it is the next request that will experience extra throttling, thus paying for the cost of the expensive task." />
      <item value="the duration of the period where the RateLimiter ramps up its rate, before reaching its stable (maximum) rate" />
      <item value="the rate of the returned RateLimiter, measured in how many permits become available per second" />
      <item value="Set multiple keys to multiple values, only if none of the keys exist with pipelining. Cross-slot keys will result in multiple calls to the particular cluster nodes." />
      <item value="Set multiple keys to multiple values with pipelining. Cross-slot keys will result in multiple calls to the particular cluster nodes." />
      <item value="Loads a new value for key, possibly asynchronously. While the new value is loading the previous value (if any) will continue to be returned by get(key) unless it is evicted. If the new value is loaded successfully it will replace the previous value in the cache; if an exception is thrown while refreshing the previous value will remain, and the exception will be logged (using java.util.logging.Logger) and swallowed." />
      <item value="Returns the value associated with key in this cache, first loading that value if necessary. No observable state associated with this cache is modified until loading completes. Unlike get, this method does not throw a checked exception, and thus should only be used in situations where checked exceptions are not thrown by the cache loader." />
      <item value="Dummy value to associate with an Object in the backing Map" />
      <item value="Creates a Spliterator over the elements described by this Iterable. Returns: a Spliterator over the elements described by this Iterable. Implementation Requirements: The default implementation creates an early-binding spliterator from the iterable's Iterator. The spliterator inherits the fail-fast properties of the iterable's iterator. Implementation Note: The default implementation should usually be overridden. The spliterator returned by the default implementation has poor splitting capabilities, is unsized, and does not report any spliterator characteristics. Implementing classes can nearly always provide a better implementation. Since: 1.8" />
      <item value="the period between successive executions" />
      <item value="the time to delay first execution" />
      <item value="Call on the superclass's implementations of {@code equals} and {@code hashCode} before calculating for the fields in this class. &lt;strong&gt;default: false&lt;strong&gt;" />
      <item value="This annotation has been deprecated as of the 3.0.1 release. @EnableDiscoveryClient is no longer needed, discovery client implementations are enabled as long as an implementation is on the classpath. @EnableCircuitBreaker is no longer used now that Hystrix has been removed from Spring Cloud." />
      <item value="Assembly" />
      <item value="Delegation to parent with explicit args" />
      <item value="arguments to use if creating a prototype using explicit arguments" />
      <item value="If the specified key is not already associated with a value (or is mapped to null), attempts to compute its value using the given mapping function and enters it into this map unless null. If the function returns null no mapping is recorded. If the function itself throws an (unchecked) exception, the exception is rethrown, and no mapping is recorded. The most common usage is to construct a new object serving as an initial mapped value or memoized result, as in:" />
      <item value="recommend source admin" />
      <item value="the array into which the elements of this list are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose." />
      <item value="all other fields defaulted" />
      <item value="if true, don't change existing value evict â€“ if false, the table is in creation mode." />
      <item value="Special EventExecutorGroup which allows registering Channels that get processed for later selection during the event loop." />
      <item value="Trim trailing whitespace from the given {@code String}." />
      <item value="Trim leading whitespace from the given {@code String}." />
      <item value="Returns the canonical pathname string of this abstract pathname." />
      <item value="Performs the given action for each remaining element until all elements have been processed or the action throws an exception. Actions are performed in the order of iteration, if that order is specified. Exceptions thrown by the action are relayed to the caller." />
      <item value="The length of the array is the number of methods on the execution stack. The element at index 0 is the class of the currently executing method, the element at index 1 is the class of that method's caller, and so on." />
      <item value="Returns the current execution stack as an array of classes." />
      <item value="if true, then the String will be added to the end of the file rather than overwriting" />
      <item value="Defines zero (0) or more exception classes, which must be subclasses of Throwable, indicating which exception types must cause a transaction rollback. By default, a transaction will be rolled back on RuntimeException and Error but not on checked exceptions (business exceptions). See org.springframework.transaction.interceptor.DefaultTransactionAttribute.rollbackOn(Throwable) for a detailed explanation. This is the preferred way to construct a rollback rule (in contrast to rollbackForClassName), matching the exception type, its subclasses, and its nested classes. See the class-level javadocs for further details on rollback rule semantics and warnings regarding possible unintentional matches." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="94" />
        <entry key="ENGLISH" value="95" />
        <entry key="HINDI" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1678183553317" />
  </component>
</application>